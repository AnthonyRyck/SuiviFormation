@using AccessData.Models
@using FormationApp.Composants

@inject IDetailCompetence DetailCompetenceVM

@page "/detailcompetence"

@attribute [Authorize(Roles = "Administrateur, Gestionnaire")]

<h3>Détail de la compétence <b>@DetailCompetenceVM.UserService.CompetenceView.Competence.Titre</b></h3>

<div>
	<RadzenCard Style="min-width:400px;">
		<h3>Information sur la compétence</h3>
		<div class="row">
			<Radzen.Blazor.RadzenLabel Text="Titre compétence :"
									   Style="margin-top: 10px;" />
			<RadzenTextBox @bind-Value="@DetailCompetenceVM.TitreCompetence"
						   MaxLength="50"
						   Disabled="@DetailCompetenceVM.IsDisabled"
						   Style="margin-left: 10px" />
		</div>

		<div class="row margin-top-10px">
			<Radzen.Blazor.RadzenLabel Text="Description :"
									   Style="margin-top: 10px;" />

			<MatTextField @bind-Value="@DetailCompetenceVM.DescriptionCompetence" 
						Style="margin-left:10px;" 
						Disabled="@DetailCompetenceVM.IsDisabled"
						FullWidth="true"
						TextArea="true" />

		</div>

		<div class="row margin-top-10px">
			@if (DetailCompetenceVM.IsDisabled)
			{
			<span>
				Modifier : 
				<RadzenButton Click="@DetailCompetenceVM.UpdateTitreOnClick"
							  Icon="update"
							  Style="margin-left: 5px; width: 40px; background-color:gray" />

			</span>
			}
			else
			{
				<RadzenButton Click="@DetailCompetenceVM.ValidateTitreOnClick" Icon="done" Style="margin-left: 5px; width: 40px; background-color:green;" />
				<RadzenButton Click="@DetailCompetenceVM.CancelTitreOnClick" Icon="highlight_off" Style="margin-left: 5px; width: 40px; background-color:orangered" />
			}
		</div>
	</RadzenCard>
</div>

<div class="padding-top-10">
	<h4>Liste des formations</h4>
	
	<div class="row">
		<div class="col-4">
			<RadzenGrid AllowFiltering="true"
						FilterCaseSensitivity="FilterCaseSensitivity.Default"
						AllowPaging="true"
						PageSize="10"
						AllowSorting="true"
						Data="@DetailCompetenceVM.TempFormationViews"
						TItem="FormationView"
						EmptyText="Il n'y a aucune formation"
						Style="width:350px;">

				<Columns>
					<RadzenGridColumn TItem="FormationView" Property="TitreFormation" Title="Titre" Filterable="true" Sortable="true">
					</RadzenGridColumn>

					@*Colonne pour la Suppression*@
					<RadzenGridColumn TItem="FormationView" Context="formation" Bubble="false" Filterable="false" Sortable="false" TextAlign="TextAlign.Center" Width="70px">
						<Template Context="formation">
							<RadzenButton ButtonStyle="ButtonStyle.Danger"
										  Icon="close"
										  Size="ButtonSize.Small"
										  Click="@(args => DetailCompetenceVM.DeleteRow(formation))">
							</RadzenButton>
						</Template>
					</RadzenGridColumn>
				</Columns>
			</RadzenGrid>

			@if (DetailCompetenceVM.CanDisplayFormationSearch)
			{
				<div class="row margin-top-10px">
					<RadzenButton Text="Valider" 
									Icon="done" 
									Style="width: 150px; background-color:green;"
									Click="@DetailCompetenceVM.ValidateFormationsOnClick" />
					<RadzenButton Text="Annuler" 
									Icon="highlight_off" 
									Style="margin-left: 20px; width: 150px; background-color:orangered;"
									Click="@DetailCompetenceVM.CancelFormationOnClick" />
				</div>
			}
		</div>

		<div class="col-8">
			@if(DetailCompetenceVM.CanDisplayFormationSearch)
			{
				<RechercheFormation OnSelectFormationClick="DetailCompetenceVM.GetFormation" />
			}
		</div>
	</div>

	<div class="margin-top-10px">
		@if (!DetailCompetenceVM.CanDisplayFormationSearch)
		{
			<MatButton OnClick="@DetailCompetenceVM.AddFormationOnClick" Raised="true">Ajouter une formation</MatButton>
		}
	</div>

</div>

@code {

}
